{"version":3,"sources":["logo.svg","components/EmployeeRow.js","components/NameSortLink.js","components/NameFilterInput.js","utils/compareNames.js","components/EmployeeTable.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeRow","props","src","employeeRecord","picture","large","alt","name","first","last","email","cell","NameSortLink","href","onClick","toggleSortDirection","NameFilterInput","htmlFor","class","type","value","filterState","onChange","onFilterChange","id","compareNames","direction","employeeRecord1","employeeRecord2","name1","name2","result","EmployeeTable","useState","employees","filteredEmployees","setFilteredEmployees","sortedEmployees","setSortedEmployees","setFilterState","sortDirection","setSortDirection","useEffect","console","log","filteredRecords","filter","toLowerCase","startsWith","filteredEmployeesCopy","slice","sort","event","target","preventDefault","stopPropagation","map","App","employeeData","results","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6loNAAe,I,YCeAA,MAbf,SAAqBC,GACjB,OACI,6BACI,mCAAK,qBAAKC,IAAKD,EAAME,eAAeC,QAAQC,MAAOC,IAAI,kBACnD,+BACI,6CAAgBL,EAAME,eAAeI,KAAKC,MAA1C,IAAkDP,EAAME,eAAeI,KAAKE,QAC5E,yCAAYR,EAAME,eAAeO,SACjC,qDAAwBT,EAAME,eAAeQ,iBCLlDC,MAHf,SAAsBX,GAClB,OAAO,mBAAGY,KAAK,QAAQC,QAASb,EAAMc,oBAA/B,oCCgBIC,MAff,SAAyBf,GACrB,OACI,gCACA,uBAAOgB,QAAS,eAAhB,iCACA,uBACAC,MAAO,eACPC,KAAK,OACLC,MAAOnB,EAAMoB,YACbC,SAAUrB,EAAMsB,eAChBhB,KAAK,cACLiB,GAAI,qBCKGC,MAlBf,WAAsC,IAAhBC,EAAe,uDAAH,EAE9B,OAAO,SAAUC,EAAiBC,GAC9B,IAAMC,EAAK,UAAMF,EAAgBpB,KAAKC,MAA3B,YAAoCmB,EAAgBpB,KAAKE,MAC9DqB,EAAK,UAAMF,EAAgBrB,KAAKC,MAA3B,YAAoCoB,EAAgBrB,KAAKE,MAEhEsB,EAAS,EAQb,OANIF,EAAQC,EACRC,EAAS,EACFF,EAAQC,IACfC,GAAU,GAGPA,EAASL,ICqETM,MA5Ef,SAAuB/B,GAAQ,IAAD,EACwBgC,mBAAShC,EAAMiC,WADvC,mBACnBC,EADmB,KACAC,EADA,OAEoBH,mBAASE,GAF7B,mBAEnBE,EAFmB,KAEFC,EAFE,OAGYL,mBAAS,IAHrB,mBAGnBZ,EAHmB,KAGNkB,EAHM,OAIgBN,mBAAS,GAJzB,mBAInBO,EAJmB,KAIJC,EAJI,KAmD1B,OAnCAC,qBAAU,WACNC,QAAQC,IAAIvB,GACZ,IAAIwB,EAAkB5C,EAAMiC,UAGR,KAAhBb,IACCwB,EAAkB5C,EAAMiC,UACxBY,QAAO,SAAA3C,GACJ,OAAOA,EAAeI,KAAKC,MAAMuC,cAAcC,WAAW3B,IACnDlB,EAAeI,KAAKE,KAAKsC,cAAcC,WAAW3B,OAQ7De,EAAqBS,KAC1B,CAAC5C,EAAMiC,UAAWb,IAErBqB,qBAAU,WACP,IAAMO,EAAwBd,EAAkBe,MAAM,GAEtDD,EAAsBE,KAAK1B,EAAae,IAExCF,EAAmBW,KAEnB,CAACd,EAAmBK,IASnB,gCACI,uBACA,cAAC,EAAD,CAAiBnB,YAAaA,EAAaE,eATnD,SAAwB6B,GAAQ,IACpBhC,EAAUgC,EAAMC,OAAhBjC,MAERmB,EAAenB,MAOX,uBACA,kCACI,gCACI,6BACI,+BAAI,cAAC,EAAD,CAAcL,oBAjDtC,SAA6BqC,GACzBA,EAAME,iBACNF,EAAMG,kBACNd,GAAkB,EAAID,MA8CN,WAIR,gCAGQH,EAAgBmB,KAAI,SAAArD,GAAc,OAC7B,cAAC,EAAD,CAAaA,eAAgBA,GAAqBA,EAAeqB,GAAGJ,mB,OC7DlFqC,MANf,WACE,OACG,cAAC,EAAD,CAAevB,UAAYwB,EAAaC,WCG9BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9d3438cc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from \"react\";\n\nfunction EmployeeRow(props) {\n    return (\n        <tr>\n            <td> <img src={props.employeeRecord.picture.large} alt=\"random images\"></img>\n                <ul>\n                    <li>Full Name: {props.employeeRecord.name.first} {props.employeeRecord.name.last}</li>\n                    <li>Email: {props.employeeRecord.email}</li>\n                    <li>Cell Phone Number: {props.employeeRecord.cell}</li>\n                </ul>\n            </td>\n        </tr>\n    );\n}\nexport default EmployeeRow;","import React from \"react\";\nfunction NameSortLink(props) {\n    return <a href=\"#home\" onClick={props.toggleSortDirection}>Sort A to Z or Z to A</a>;\n}\nexport default NameSortLink;","import React from \"react\";\n\n\nfunction NameFilterInput(props) {\n    return (\n        <div>\n        <label htmlFor= \"filter-input\">Filter List By Name</label>\n        <input \n        class =\"form-control\"\n        type=\"text\" \n        value={props.filterState} \n        onChange={props.onFilterChange}\n        name=\"filterInput\" \n        id =\"filter-input\" />\n        </div>\n    )\n}\n\nexport default NameFilterInput;","function compareNames(direction = 1) {\n\n    return function (employeeRecord1, employeeRecord2) {\n        const name1 = `${employeeRecord1.name.first} ${employeeRecord1.name.last}`\n        const name2 = `${employeeRecord2.name.first} ${employeeRecord2.name.last}`\n\n        let result = 0;\n\n        if (name1 > name2) {\n            result = 1;\n        } else if (name1 < name2) {\n            result = -1;\n        }\n\n        return result * direction;\n    }\n}\n\nexport default compareNames;","import React, { useState, useEffect } from \"react\";\nimport EmployeeRow from \"./EmployeeRow\";\nimport NameSortLink from \"./NameSortLink\";\nimport NameFilterInput from \"./NameFilterInput\";\n\nimport compareNames from \"../utils/compareNames\";\n\nfunction EmployeeTable(props) {\n    const [filteredEmployees, setFilteredEmployees] = useState(props.employees);\n    const [sortedEmployees, setSortedEmployees] = useState(filteredEmployees);\n    const [filterState, setFilterState] = useState(\"\");\n    const [sortDirection, setSortDirection] = useState(1);\n\n    //let employeeRecords = props.employees.slice(0);\n\n\n\n    function toggleSortDirection(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        setSortDirection(-1 * sortDirection);\n    }\n\n    useEffect(function () {\n        console.log(filterState);\n        let filteredRecords = props.employees;\n       \n\n        if (filterState !== '') {\n             filteredRecords = props.employees\n            .filter(employeeRecord => {\n                return employeeRecord.name.first.toLowerCase().startsWith(filterState)\n                    || employeeRecord.name.last.toLowerCase().startsWith(filterState);\n                    \n\n            })\n            \n        }\n        \n\n            setFilteredEmployees(filteredRecords);\n    }, [props.employees, filterState]);\n\n    useEffect(function () {\n       const filteredEmployeesCopy = filteredEmployees.slice(0);\n\n       filteredEmployeesCopy.sort(compareNames(sortDirection));\n\n       setSortedEmployees(filteredEmployeesCopy);\n        \n    }, [filteredEmployees, sortDirection ])\n\n    function onFilterChange(event) {\n        const { value } = event.target;\n\n        setFilterState(value);\n    }\n\n    return (\n        <div>\n            <br />\n            <NameFilterInput filterState={filterState} onFilterChange={onFilterChange} ></NameFilterInput>\n            <br />\n            <table>\n                <thead>\n                    <tr>\n                        <th><NameSortLink toggleSortDirection={toggleSortDirection} /> </th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {\n\n                        sortedEmployees.map(employeeRecord =>\n                            (<EmployeeRow employeeRecord={employeeRecord} key={employeeRecord.id.value} />))\n                    }\n                </tbody>\n            </table>\n        </div>\n    )\n\n}\n\nexport default EmployeeTable;","import logo from './logo.svg';\nimport './App.css';\nimport EmployeeTable from \"./components/EmployeeTable\";\nimport employeeData from \"./employess.json\";\n\n\n\nfunction App() {\n  return (\n     <EmployeeTable employees ={employeeData.results}/> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}